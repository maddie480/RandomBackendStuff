# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check for tabs
      run: |
        find "(" -name "*.java" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Pl "\t" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No tab found!"

    - name: Check for CRLF
      run: |
        find "(" -name "*.java" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Plz "\r\n" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No CRLF found!"

    - name: Check for trailing spaces
      run: |
        find "(" -name "*.java" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Pl " $" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No trailing space found!"

    - name: Clone open-vulnerability-clients fork
      run: git clone https://github.com/maddie480/Open-Vulnerability-Project.git

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Build open-vulnerability-clients fork
      run: |
        cd Open-Vulnerability-Project/open-vulnerability-clients
        ../gradlew publishToMavenLocal --info

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build Update Checker dependency
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
      run: |
        git clone https://github.com/maddie480/EverestUpdateCheckerServer.git
        cd EverestUpdateCheckerServer
        mvn install

    - name: Build with Maven
      run: mvn -B verify --file pom.xml

    - name: Set up QEMU
      if: github.ref == 'refs/heads/main'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: github.ref == 'refs/heads/main'
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: max480/random-stuff-backend:latest

    - name: Upload target folder as artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: target
        path: target
